import express, { Request, Response } from 'express';
import mongoose from 'mongoose';
import cors from 'cors';
import dotenv from 'dotenv';
import dailyReportRoutes from './routes/dailyReportRoutes';
import projectRoutes from './routes/projectRoutes';
import rfiRoutes from './routes/rfiRoutes';
import authRoutes from './routes/authRoutes';
import { auth } from './middleware/auth';

// Load environment variables
dotenv.config();

const app = express();

// Middleware
app.use(express.json());
app.use(cors({
  origin: process.env.CORS_ORIGIN || 'http://localhost:3000',
  credentials: true
}));

// Connect to MongoDB
mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/aquillasancta')
  .then(() => console.log('Connected to MongoDB'))
  .catch((error: Error) => console.error('MongoDB connection error:', error));

// Public routes
app.use('/api/auth', authRoutes);

// Protected routes
app.use('/api/daily-reports', auth, dailyReportRoutes);
app.use('/api/projects', auth, projectRoutes);
app.use('/api/rfis', auth, rfiRoutes);

// Test route (no auth required)
app.get('/api/test', (req: Request, res: Response) => {
  res.json({ message: 'API is working!' });
});

// Health check endpoint (no auth required)
app.get('/healthz', (req: Request, res: Response) => {
  res.status(200).json({ status: 'healthy' });
});

const PORT = parseInt(process.env.PORT || '10000', 10);
app.listen(PORT, '0.0.0.0', () => {
  console.log(`Server running on port ${PORT}`);
}); 